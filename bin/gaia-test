#!/bin/bash

SELF=`basename $0`

#
# Run the gaia unit test agent server and with firefox.
#
# Basic usage:
#
#   gaia-test <gaia location> <firefox binary>
#
# The both parameters are optional.
#
# The gaia directory to test is found using the following heuristic:
#   1) If the gaia location specified on the command line is a directory,
#      then use it.
#   2) If the gaia location specified on the command line is not a directory,
#      try appending it to "$FXOS_HOME/gaia-".  This is a shortcut for working
#      with multiple checkouts of gaia.
#   3) If the gaia location is not specified, use the $GAIADIR environment
#      variable.
#   4) If the environment variable is not specified either, then use
#      "$FXOS-HOME/gaia-master"
#
# The firefox binary is found using the following heuristic:
#   1) If the firefox binary is specified on the command line, then attempt
#      to find it in the path if its relative or just use it if its absolute.
#   2) Look up "firefox" in the path.
#

#
# Configure gaia location
#
if [ "$1" = "" ] ; then
  if [ "$GAIADIR" = "" ] ; then
    GAIADIR="$FXOS_HOME/gaia-master"
  fi
elif [ -d "$1" ] ; then
  GAIADIR="$1"
else
  GAIADIR="$FXOS_HOME/gaia-$1"
fi

if [ ! -d "$GAIADIR" ] ; then
  echo "$SELF: '$GAIADIR' is not a directory!"
  exit 1
fi

GAIADIR=`readlink -f $GAIADIR`

#
# Configure firefox test binary
#
BASE_FIREFOX='firefox'
if [ "$2" != "" ] ; then
  BASE_FIREFOX="$2"
fi

FIREFOX=`which $BASE_FIREFOX`
if [ ! -x "$FIREFOX" ] ; then
  echo "$SELF: Unable to find an executable '$BASE_FIREFOX' in path!"
  exit 1
fi

#
# Verify firefox version is new enough
#
VERSION=`$FIREFOX --version | awk '{print $3}'`
REQ_VERSION='22'
if expr "$VERSION" \< "$REQ_VERSION" >/dev/null ; then
  echo "$SELF: Firefox is only version $VERSION; use $REQ_VERSION or newer."
  exit 1
fi

echo "$SELF: Using gaia at '$GAIADIR'."
echo "$SELF: Using Firefox $VERSION at '$FIREFOX'."

#
# Verify additional dependencies are installed
#
NODE=`which node`
NPM=`which npm`
if [ ! -x "$NODE" ] ; then
  echo "$SELF: Unable to find node; please install node.js."
  exit 1
elif [ ! -x "$NPM" ] ; then
  echo "$SELF: Unable to find npm; please install npm."
  exit 1
fi

cd $GAIADIR

#
# Verify the profile is ready
#
PROFILE="$GAIADIR/profile-debug"
if [ ! -d "$PROFILE" ] ; then
  echo "$SELF: Building the debug profile."
  DEBUG=1 make
fi

#
# Launch firefox
#
$FIREFOX --no-remote -profile "$PROFILE" http://test-agent.gaiamobile.org:8080/ &
cleanup() {
  echo "$SELF: Stopping firefox on exit."
  kill "%1"
}
trap cleanup EXIT

#
# Launch the test agent
#
make test-agent-server
